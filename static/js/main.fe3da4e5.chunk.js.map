{"version":3,"sources":["fire.js","Login.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","className","type","autoFocus","required","value","onChange","e","target","onClick","Home","handleLogout","App","useState","user","setUser","setEmailError","setPasswordError","allEntry","setAllEntry","clearErrors","authListener","auth","onAuthStateChanged","useEffect","action","onSubmit","preventDefault","newEntry","console","log","signOut","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","map","curElem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe3da4e5.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBTQoc26NKp7p0VaN1OGlZdKDbVqqKE0P0\",\r\n    authDomain: \"login-bcbf2.firebaseapp.com\",\r\n    projectId: \"login-bcbf2\",\r\n    storageBucket: \"login-bcbf2.appspot.com\",\r\n    messagingSenderId: \"1092837170145\",\r\n    appId: \"1:1092837170145:web:9fa4f6392a1fd16c8f50a0\"\r\n  };\r\n\r\n  const fire = firebase.initializeApp(firebaseConfig);\r\n\r\n  export default fire;","import React from 'react';\r\n\r\nconst Login = (props) =>{\r\n\r\n    const {\r\n        email,\r\n        setEmail,\r\n        password,\r\n        setPassword,\r\n        handleLogin,\r\n        handleSignup,\r\n        hasAccount,\r\n        setHasAccount,\r\n        emailError,\r\n        passwordError\r\n    } = props;\r\n\r\n    return(\r\n        <section className=\"login\">\r\n            <div className=\"loginContainer\">\r\n                <label>Username</label>\r\n                <input \r\n                    type=\"text\" \r\n                    autoFocus \r\n                    required \r\n                    value={email} \r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <p className=\"errorMsg\">{emailError}</p>\r\n                <label>Password</label>\r\n                <input \r\n                    type=\"password\" \r\n                    required \r\n                    value={password} \r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <p className = \"errorMsg\">{passwordError}</p>\r\n                <div className = \"btnContainer\">\r\n                    {hasAccount ?(\r\n                        <>\r\n                            <button onClick={handleLogin}>Sign in</button>\r\n                            <p>Don't have an account ?<span onClick={() => setHasAccount(!hasAccount)}>Sign Up</span></p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <button onClick={handleSignup}>Sign Up</button>\r\n                            <p>Have an account ?<span onClick={() => setHasAccount(!hasAccount)}>Sign In</span></p>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n\r\n    )\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Home = ({handleLogout}) => {\r\n\r\n    return(\r\n        <section className=\"home\">\r\n            <nav>\r\n                <h2>Page.</h2>\r\n                <button onClick = {handleLogout}>Logout</button>\r\n            </nav>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Home;","import React,{useState, useEffect} from \"react\";\nimport fire from './fire';\nimport Login from \"./Login\";\nimport Home from \"./Home\"\nimport './App.css';\n\nconst App = () => {\n  const[user, setUser] = useState('');\n  const[email, setEmail] = useState('');\n  const[password, setPassword] = useState('');\n  const[emailError, setEmailError] = useState('');\n  const[passwordError, setPasswordError] = useState('');\n  const[hasAccount, setHasAccount] = useState(false);\n\n  const[allEntry, setAllEntry] = useState([]);\n\n  const submitForm = (e) =>{\n    e.preventDefault();\n    const newEntry = {email: email, password: password};\n\n    setAllEntry([...allEntry, newEntry]);\n    console.log();\n  }\n\n  const clearInputs = () =>{\n    setEmail('');\n    setPassword('');\n  }\n\n  const clearErrors = () =>{\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  const handleLogin = () =>{\n    clearErrors();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(err =>{\n        switch(err.code){\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break; \n        }\n      });\n  };\n\n  const handleSignup = () =>{\n    clearErrors();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch(err =>{\n        switch(err.code){\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break; \n        }\n      });\n  };\n\n  const handleLogout = () =>{\n    fire.auth().signOut();\n  };\n\n  const authListener = () =>{\n    fire.auth().onAuthStateChanged(user =>{\n      if(user){\n        clearInputs();\n        setUser(user);\n      }\n      else{\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  \n\n  return (\n    <>\n      <form action = \"\" onSubmit={submitForm}>\n        <div className=\"App\">\n          {user ?(\n            <Home handleLogout={handleLogout}/>\n          ) : (\n            <Login \n              email ={email} \n              setEmail={setEmail} \n              password={password} \n              setPassword={setPassword} \n              handleLogin={handleLogin} \n              handleSignup={handleSignup}\n              hasAccount = {hasAccount}\n              setHasAccount = {setHasAccount}\n              emailError={emailError}\n              passwordError={passwordError}\n            />\n          )}\n        </div>\n      </form>\n      <div>\n        {\n          allEntry.map((curElem)=>{\n            return(\n              <div className = \"showData\">\n                <p>Credentials:</p>\n                <p>{curElem.email}</p>\n                <p>{curElem.password}</p>\n              </div>\n            )\n          })\n        }\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}